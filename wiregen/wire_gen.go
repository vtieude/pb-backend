// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wiregen

import (
	"context"
	"github.com/google/wire"
	"log"
	"pb-backend/entities"
	"pb-backend/graph"
	"pb-backend/modifies"
	"pb-backend/services"
)

// Injectors from wire.go:

func InitializeApp(ctx context.Context, log2 log.Logger) (*App, error) {
	dbConnection := entities.OpenConnection(ctx, log2)
	userService := &services.UserService{
		DB: dbConnection,
	}
	resolver := &graph.Resolver{
		IUserService: userService,
	}
	myCustomHttpHandler := &modifies.MyCustomHttpHandler{
		DB: dbConnection,
	}
	app := &App{
		Resolver:       resolver,
		CustomModifies: myCustomHttpHandler,
	}
	return app, nil
}

// wire.go:

var serviceSet = wire.NewSet(services.NewUserService, services.NewProductService, modifies.ModifiesSet)

var dbSet = wire.NewSet(entities.OpenConnection, wire.Bind(new(entities.DB), new(*entities.DBConnection)))

type App struct {
	Resolver       *graph.Resolver
	CustomModifies *modifies.MyCustomHttpHandler
}
